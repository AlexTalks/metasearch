# Metasearch config file. Anywhere in this file, you can reference environment
# variables using placeholders such as ${FOOBAR} that Metasearch will expand at
# runtime.

# An "engine" is an individual content source, e.g. Confluence. All supported
# engines are listed below.
#
# You should customize the config values (required unless stated otherwise) for
# all engines that you plan to use and simply delete the entries for any engines
# that you don't plan to use.
#
# Each engine's config accepts an optional `name` key (not shown in this
# example) that you may declare to override the engine's default name for
# display purposes, e.g. `name: Employee directory` in Pingboard's config.
engines:
  # Confluence pages
  confluence:
    # Confluence server URL origin
    origin: https://example.atlassian.net
    # Atlassian API token
    token: 8NTHnTHE94xt6E6l6ig5fUbN
    # Atlassian user who owns the API token
    user: admin@example.com

  # Dropbox files and folders
  dropbox:
    # Case-insensitive regex for excluding search results based on file path
    # (optional)
    exclude: wip
    # Case-insensitive top-level folder to search in (optional, defaults to all
    # folders)
    folder: untitled (2)
    # Dropbox API token
    token: vqTsOkuz0bAE_znMjyUfeHLkXUa6gj5mG5BS4pjS2pem9tMahbXpS0Hd725GY-oJ

  # Google Drive documents
  drive:
    # Path to Google OAuth credentials. You can obtain this file by going to the
    # Google API console, creating credentials of type "OAuth client ID" with
    # application type "Web application" and `http://localhost:3001/` as an
    # authorized redirect URI, and clicking "DOWNLOAD JSON".
    #
    # https://console.developers.google.com/apis/credentials
    # https://github.com/googleapis/google-api-nodejs-client/tree/62f8193#oauth2-client
    #
    # Note that if you run Metasearch using Docker, you need to make the host's
    # credentials file accessible from inside the container. One way to do so is
    # by entering `/data/credentials.json` as this option's value and supplying
    # to `docker run` an additional flag that mounts the host file to that path:
    # `-v '/path/to/credentials.json:/data/credentials.json'`
    credentials: /path/to/credentials.json
    # OAuth2 refresh token. You can obtain this by piping the aforementioned
    # credentials file into this repo's `make oauth` command and then following
    # the CLI's instructions.
    #
    # For example: make oauth < /path/to/credentials.json
    token: 5DRP6HbKpPwO41oFjr0RHxqldF6V9LTrMY/VW0GpfCYVuRX1aA4pjS7f/ECOWRz7ff2O4FfdL3zD7inAhZMcqC4O16G8xEhMXQ24Gyl

  # Figma files, projects, and teams
  figma:
    # Organization ID, the number that appears in the URL when viewing your
    # Figma organization's home page: https://www.figma.com/files/<org_id>
    organization: 735245445471726247
    # Figma password. If your account doesn't have a password yet (e.g. because
    # you sign into Figma via Google), you can add one to your account by going
    # through Figma's "Forgot password?" flow.
    password: ex4mp1ep4ssw0rd
    # Figma user account
    user: admin@example.com

  # GitHub repo names and descriptions (for GitHub code, use Hound engine)
  github:
    # GitHub organization
    organization: example
    # GitHub personal access token
    token: b701f041284869e7ff1d5b71e65d27119c869aba

  # Google Groups (i.e. mailing lists)
  groups:
    # (See `drive` engine config for an explanation of this property)
    credentials: /path/to/credentials.json
    # Domain of groups to search
    domain: example.com
    # (See `drive` engine config for an explanation of this property)
    token: 5DRP6HbKpPwO41oFjr0RHxqldF6V9LTrMY/VW0GpfCYVuRX1aA4pjS7f/ECOWRz7ff2O4FfdL3zD7inAhZMcqC4O16G8xEhMXQ24Gyl

  # Guru cards
  guru:
    # API user token
    token: 313be9f0-a3a8-4850-9db8-3b56640ccc4f
    # Token owner
    user: admin@example.com

  # Hound-indexed code: https://github.com/hound-search/hound
  hound:
    # GitHub organization
    organization: example
    # Hound server URL origin
    origin: https://hound.example.com

  # Jenkins job names
  jenkins:
    # Jenkins server URL origin
    origin: https://jenkins.example.com

  # Jira issue titles and descriptions
  jira:
    # Jira server URL origin
    origin: https://example.atlassian.net
    # Atlassian API token
    token: 8NTHnTHE94xt6E6l6ig5fUbN
    # Atlassian user who owns the API token
    user: admin@example.com

  # PagerDuty schedules and services
  pagerduty:
    # PagerDuty API token
    token: tViu3EFqBHVYfPtLDBV5

  # Pingboard employees
  pingboard:
    # Pingboard non-admin API key ID
    key: 023343997345d7430113dfd3012f5bc1e56502f36a31d0aed168c8fc7c38cf1d
    # Pingboard organization name (appears before `.pingboard.com` in your account's URLs)
    organization: example
    # Pingboard non-admin API secret
    secret: ea033aedc8fe535944f59abcd4bbca8f9f7f92ae04c485d471ae729ab77e62ac

  # Rollbar projects
  rollbar:
    # Rollbar organization
    organization: example
    # Account access token with `read` scope
    token: 7919bf2527e27afa20884baed5236db1

  # Slack messages and channels
  slack:
    # Slack organization name (appears before `.slack.com` in your account's URLs)
    organization: example
    # Slack OAuth token that has the scopes `channels:read` and `search:read`
    token: xoxp-9317820445-5055344098406-9716974264728-bc5986b6a3963c57fd3d1c8528e7e7a6

  # TalentLMS courses
  talentlms:
    # TalentLMS API key
    key: wbrSRlXBGmAs2WTvOsx0HxIL0iHWBn
    # TalentLMS organization name (appears before `.talentlms.com` in your account's URLs)
    organization: example

  # Zoom room names
  zoom:
    # Zoom API key used for JWT authentication
    key: iLGl0DWeD4xeWeQWzGi4Ju
    # Zoom API secret used for JWT authentication
    secret: KbJ9Axxi9Md5BfeeGBuXaAofkRlqQoQ3Eff1
